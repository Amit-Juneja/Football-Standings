/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** @description Health check endpoint for Football Standings API */
    get: operations["healthCheck"];
  };
  "/standings": {
    /**
     * Get football standings
     * @description Fetch standings for a football team based on country, league, and team name.
     */
    get: operations["getStandings"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ErrorModel: {
      message: string;
      error: string;
    };
    /** @description Health check status */
    HealthStatus: {
      /** @enum {string} */
      status: "OK";
    };
    /** @description Get Standings Response */
    GetStandingsResponseBody: {
      /**
       * @description Country Name
       * @example Bahrain
       */
      country_name?: string;
      /**
       * @description League ID
       * @example 59
       */
      league_id?: string;
      /**
       * @description League Name
       * @example Premier League
       */
      league_name?: string;
      /**
       * @description Team ID
       * @example 11028
       */
      team_id?: string;
      /**
       * @description Team Name
       * @example Al Khaldiya
       */
      team_name?: string;
      /**
       * @description Overall League Position
       * @example 1
       */
      overall_league_position?: string;
    };
  };
  responses: {
    /** @description Internal server error */
    InternalServerError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
    /** @description Not found error */
    NotFoundError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
    /** @description Bad Request error */
    BadRequestError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
    /** @description Unauthorized */
    UnauthorizedError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
    /** @description Forbidden */
    ForbiddenError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
    /** @description Conflict */
    ConflictError: {
      content: {
        "application/json": components["schemas"]["ErrorModel"];
      };
    };
    /** @description OK */
    GetStandingsResponse: {
      content: {
        "application/json": {
          data: components["schemas"]["GetStandingsResponseBody"][];
        };
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description Health check endpoint for Football Standings API */
  healthCheck: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HealthStatus"];
        };
      };
      500: components["responses"]["InternalServerError"];
    };
  };
  /**
   * Get football standings
   * @description Fetch standings for a football team based on country, league, and team name.
   */
  getStandings: {
    parameters: {
      query: {
        /** @description The league name */
        league: string;
      };
    };
    responses: {
      200: components["responses"]["GetStandingsResponse"];
      401: components["responses"]["UnauthorizedError"];
      403: components["responses"]["ForbiddenError"];
      404: components["responses"]["NotFoundError"];
      500: components["responses"]["InternalServerError"];
    };
  };
}
